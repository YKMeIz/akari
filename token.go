package akari

import (
	"crypto/rand"
	"errors"
	"fmt"
)

func randToken() string {
	b := make([]byte, 16)
	rand.Read(b)
	return fmt.Sprintf("%x", b)
}

func GenerateToken() string {
	return randToken()
}

func (u User) RegisterUser() (string, string, error) {
	checkDatabaseConnection()
	if u.Token != "" {
		return "", "", errors.New("err: Custom token is not allowed. Token should be generated by system.")
	}
	new := User{Name: u.Name, Token: randToken()}
	db.Save(&new)
	return new.Name, new.Token, nil
}

func (u User) RevokeUser() error {
	checkDatabaseConnection()
	if !u.IsUser() {
		return errors.New("err: No such a user.")
	}
	if u.Name != "" {
		db.Where(&u).First(&u).Delete(&u)
		return nil
	}
	if u.Token != "" {
		db.Where(&u).First(&u).Delete(&u)
		return nil
	}
	return errors.New("err: Name or Token is required to revoke a user.")
}
